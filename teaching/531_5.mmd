Title: Ranking constraints
Author: Brian W. Smith
Date: 9/12/2019
CSS: bws.css

<!-- Standard header. Change title in metadata -->

[USC Graduate Phonology](531_guide.html) ✳︎ Fall 2019 ✳︎ Smith
***

<div class="title">

[%title]

</div>

{{TOC}}

***

<!-- Content starts below -->
# The selection problem and the ranking problem
- There are two common tasks for the OT analyst:
    + **Selection problem**: Select the winner. Given a ranking, find the mappings that are generated by it. 
    + **Ranking problem**: Discover a ranking. Given a mapping or mappings, find which constraint rankings are *necessary* to generate it (or them).
- The tableaux we've seen -- with asterisks, exclamation points and shading -- are very useful for the selection problem, but not ideal for the ranking problem.

# Crucial ranking and non-crucial rankings
- There will always be constraints that we can't rank with the data we have.
- Sometimes, this difference is reprsented by different vertical lines between the constraint columns of a tableau.
    - A solid line between constraints represents a **crucial ranking**, a ranking that *must* hold for the optimal candidate to win. If the constraints were flipped, the winner would change.
    - A dashed line represents a **non-crucial ranking** between constraints. If the constraints were flipped, the winner would not change. 
- A **ranking argument** demonstrates a crucial ranking, usually in the form of a tableau.
    - The smallest ranking argument possible has two candidates and two constraints.
    - The two constraints must conflict.
    - The two candidates must be from the same candidate set.
    - One of the candidates must be a winner.
    - For the ranking argument to be sound, there can't be a third constraint that favors the winner over the loser.

# Ranking argument practice: Dutch
- Let's make tableaux showing ranking arguments for the [Dutch problem](531_4.html#practicetableau) from last time.
- You should be able to copy-paste the tableau below into your favorite spreadsheet program.

<div class="tableau">

|Candidates     |||             *Max-V*|*\*ʔV̆*|*Ident*(stress)|\*VV|*Dep-C|
|---       |:---   |---:       |:---:  |:---: |:---:  |:---:  |:---:  |
|/aɔ́rta/   |a.  | [a.ɔ́r.ta]    | | | | | | 
|          |b.  |☞[a.ʔɔ́r.ta]   | | | | | | 
|          |c.  | [ɔ́r.ta]      | | | | | |
|          |d.  | [a.ʔɔr.tá]   | | | | | |

|/xáos/    |a.  | ☞ [xá.os]    | | | | | |
|          |b.  | [xá.ʔos]     | | | | | |
|          |c.  | [xos]        | | | | | |
|          |d.  | [xa.ʔós]     | | | | | |

</div>

# Hasse diagrams
 -  You can use a **Hasse diagram** to show the crucial constraint rankings in a language:
            - A vertical line means the constraint at the top of the line must outrank constraint at the bottom of the line.
            - Let's make a Hassse diagram for Dutch.

# Harmonic Bounding
- A candidate is **harmonically bounded** if it cannot win under *any* ranking of constraints.
    + This means that the grammar simply **cannot** generate the harmonically bounded mapping.
 
 <div class="tableau">
    
|Candidates     |||             *\*CC*  |*Dep-V*  |
|---    |:---   |---:           |:---:  |:---:  |
|/at-ka/   |a.  |[atəka]      |       | ✳︎     |
|          |b.  |[atka]       |✳︎      |       |
|          |c.  |[atəəka]     |       | ✳︎✳︎     |
[Example of harmonic bounding. [atəəka] is harmonically bounded.]
</div>

- You can often determine whether a candidate is harmonically bounded simply by looking at its violations.
-  Harmonic bounding is dependent on the constraint set and candidate set under consideration.
    +  Let's add a third constraint (however nonsensical) that makes it so candidate c isn't harmonically bounded.
- A more subtle type of harmonic bounding is **collective harmonic bounding**, in which a candidate cannot win because multiple other candidates prevent it from being the best on any constraint.
    + In the tableau below, candidate b. isn't the worst on any constraint, but it's never the best either.

 <div class="tableau">

|Candidates     |||                     *\*CC*  |*Dep-V*  |
|---            |:---|---:              |:---:  |:---:  |
|/at-kap-so/    |a.  |[atkapso]         |✳︎✳︎     |       |
|               |b.  |[atkapəso]        |✳︎       | ✳︎      |
|               |c.  |[atəkapəso]       |       | ✳︎✳︎     |
[Example of collective harmonic bounding of [atkapəso]]
</div>

- How many harmonically bounded candidates are there for each of the inputs above? (If we considered the entire candidate set.)

#  The comparative tableau
- The **violation tableau** (with violation marks, exclamation points, and shading) is a good way to illustrate the selection problem, but is not a good way to address the ranking problem.
- The **comparative tableau** compares the winning candidate to different losing candidates, and is a good way to address the ranking problem.
 

<div class="tableau">

|Candidates     |||             *\*CC*  |*Dep-V*  |
|---    |:---   |---:           |:---:  |:---:  |
|/at-ka/   |a.  |☞ [atəka]      |       | ✳︎     |
|          |b.  |[atka]         |✳︎!     |       |

|/at-a/   |a.  |[atəa]          |        | ✳︎!    |
|          |b.  |☞[ata]         |        |       |
[Example of a violation tableau]
</div>

<div class="tableau">

|       |Input      |Winner ~ Loser     | *\*CC*|*Dep-V*|
|---:   |:---:      |:---:              |:---:  |:---:  |
|a.     |/at-ka/    |[atəka]  ~ [atka]  |W      |L      |
|b.     |/at-a/     |[ata] ~ [atəa]     |e      |W      |
[Example of a comparative tableau]

</div>

- Anatomy of a comparative tableau:
    - Each row compares the winning candidate to one losing candidate. 
    - Each cell indicates whether a constraint prefers the Winner or Loser
    - Indifferent constraints can be indicated with (e). 
    - Let's make a comparative tableau for Dutch.

- Each row of Ws and Ls encodes certain ranking requirements, sometimes called **Elementary Ranking Condition** (ERC [ɚk]: Prince 2002)
    - For the desired winner to be optimal, **at least one** constraint assessing W (preferring the targeted optimum) must dominate **all** constraints assessing L (those preferring the targeted suboptimum).
        + **Every L in a row must have a W to (somewhere) to its left!**
        + Memorize this! Chant this! Write a song for this!
    + For example <W, L, L, e> entails that the first constraint dominates the second, and the first constraint also dominates the third.
    + What ranking requirements (if any) does <W, W, L, e> entail?

# Practice with crucial rankings
-   What are the crucial rankings for each the tableaux below?
-   Harder question: what ranking information that can be represented with ERCs that can't be represented with dashed and solid lines?

<div class="tableau">

| | |Winner ~ Loser      |*Con-X*    | *Con-Y*    |   *Con-Z* |
|:---|:---| :---: | :---:| :---:|:---:|:---:|
| | a. | cand-1 ~ cand-2    |  W         | L        |        |
| | b. | cand-1 ~ cand-3    |           | W        | L     |
[Tableau 1]

| | |Winner ~ Loser |*Con-X*    | *Con-Y*    |   *Con-Z* |
|:---|:---| :---: | :---:| :---:|:---:|:---:|
| | a. |  cand-1 ~ cand-2   |  W         | W       | L       |
| | b. |  cand-1 ~ cand-3   |           | L       | W       |
[Tableau 2]


| | |Winner ~ Loser|*Con-X*    | *Con-Y*    |   *Con-Z* |
|:---|:---| :---: | :---:| :---:|:---:|:---:|
| | a. |  cand-1 ~ cand-2  |    L        |  W        | L |
| | b. |  cand-1 ~ cand-3  |             |           | W |
[Tableau 3]


| | |Winner ~ Loser|*Con-X*    | *Con-Y*    |   *Con-Z* |
|:---|:---| :---: | :---:| :---:|:---:|:---:|
| | a. |  cand-1 ~ cand-2  |    W      | L        | L      |
| | b. |  cand-1 ~ cand-3  |   L       | W        |       |    
[Tableau 4]


| | |Winner ~ Loser|*Con-X*    | *Con-Y*    |   *Con-Z* |
|:---|:---| :---: | :---:| :---:|:---:|:---:|
|  | a. |  cand-1 ~ cand-2  |    W       | L       |         |
| | b. |  cand-1 ~ cand-3  |            |         | W       |
[Tableau 5]

</div>

# Hybrid tableaux (combination tableaux)
- Possibly the best of both worlds: indicate both violations and constraint preferences (subscripts make it easier to read).

<div class="tableau">

|Candidates     |||             *\*CC*  |*Dep-V*  |
|---    |:---   |---:           |:---:  |:---:  |
|/at-ka/   |a.  |☞ [atəka]      |       | 1     |
|          |b.  |[atka]         |1~W    |  ~L     |

|/at-a/   |a.  |[atəa]          |        | 1~W    |
|          |b.  |☞[ata]         |        |       |
[Example of a hybrid tableau]
</div>

-   There are never Ws or Ls in the row containing the winner.
-   From now on, we'll use comparative/combination tableaux when we're trying to show a ranking, and violation tableaux when we're trying to show how the constraint ranking selects the winner.
    - This makes your final tableaux easy to read and verify.

# Recap of major ideas
- selection problem
    + violation tableaux
- ranking problem
    + comparative tableaux: Ws and L
    + crucial and non-crucial rankings
    + ranking arguments
    + Hasse diagram
    - ERCs (Elementary Ranking Conditions)
        + **Every** L need **at least one** W to its left
- harmonic bounding





